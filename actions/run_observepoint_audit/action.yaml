
name: ObservePoint Audit (v3)

description: |
  Starts an ObservePoint web‑audit through the v3 API and checks
  that the audit run is successfully created. Sends rich
  callbackContext data so that a downstream workflow_dispatch
  can process completion callbacks.

# ------------------------------------------------------------------------------
# INPUTS
# ------------------------------------------------------------------------------
inputs:
  pr_number:
    description: 'Pull‑Request number (omit on push).'
    required: false
    default: ''

  audit_id:
    description: 'Audit ID to start.'
    required: true

  # The initial URL(s) for the audit. Comma‑separated.
  starting_urls:
    description: 'Comma‑separated list of starting URLs passed to startingUrls.'
    required: true

  # ObservePoint API key stored in repo / org secrets
  op_api_key:
    description: 'API key for ObservePoint.'
    required: true

  callback_owner:
    description: 'GitHub owner / organisation for the callback repository.'
    required: true
  callback_repo:
    description: 'Repository that contains the workflow to consume the callback.'
    required: true
  callback_event_type:
    description: 'Event type name name (e.g. observepoint-audit-complete) that will be triggered by repository_dispatch.'
    required: true
  callback_ref:
    description: 'Git ref (branch) to run the downstream workflow on.'
    required: true
  callback_token:
    description: 'GitHub token used by ObservePoint callback to dispatch the workflow.'
    required: true

  commit_sha:
    description: 'Commit SHA to set status against (optional in v3; still forwarded for traceability).'
    required: false
    default: ''

# ------------------------------------------------------------------------------
# EXECUTION ---------------------------------------------------------------------
# ------------------------------------------------------------------------------
runs:
  using: 'composite'
  steps:
    - id: start-audit
      name: Start ObservePoint Audit (v3)
      shell: bash
      run: |
        set -euo pipefail

        # Split comma‑separated starting URLs into array
        IFS=',' read -r -a starting_urls_list <<< "${{ inputs.starting_urls }}"

        # Build JSON array for startingUrls
        starting_urls_json=$(printf '%s\n' "${starting_urls_list[@]}" | jq -R . | jq -s .)

        audit_id="${{ inputs.audit_id }}"
        echo "📣 Triggering audit ID ${audit_id} …"

        # Construct payload for v3 endpoint ---------------------------------
        payload=$(jq -n \
          --argjson startingUrls          "${starting_urls_json}" \
          --arg owner                     "${{ inputs.callback_owner }}" \
          --arg repo                      "${{ inputs.callback_repo }}" \
          --arg callbackWorkflowEventType  "${{ inputs.callback_event_type }}" \
          --arg ref                       "${{ inputs.callback_ref }}" \
          --arg cb_token                  "${{ inputs.callback_token }}" \
          --arg pr                        "${{ inputs.pr_number }}" \
          --arg commitSha                 "${{ inputs.commit_sha }}" \
          '{
            startingUrls: $startingUrls,
            callbackWorkflowEventType: callbackWorkflowEventType,
            callbackContext: {
              owner:          $owner,
              repo:           $repo,
              ref:            $ref,
              callbackToken:  $cb_token,
              prNumber:       $pr,
              commitSha:      $commitSha
            }
          }')

        # POST to the v3 API -------------------------------------------------
        http_code=$(curl -s -w "%{http_code}" -o response.json \
          -X POST "https://app.observepointstaging.com/api/v3/web-audits/${audit_id}/runs" \
          -H "Authorization: api_key ${{ inputs.op_api_key }}" \
          -H "Content-Type: application/json" \
          --data "${payload}")

        # Handle response ----------------------------------------------------
        if [[ "${http_code}" =~ ^[45] ]]; then
          echo "❌ Failed to start audit ${audit_id} (HTTP ${http_code})"
          cat response.json || true
          exit 1
        else
          echo "✅ Audit ${audit_id} started successfully (HTTP ${http_code})."
        fi